name: Build and Push Docker Image

# Concurrency group scoped to the workflow run. The last run will cancel any in-progress job.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]
  schedule:
    - cron: '0 0 * * 0'  # Run weekly to keep images up to date

env:
  REGISTRY_GITHUB: ghcr.io
  REGISTRY_DOCKERHUB: docker.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_GITHUB }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get Caddy version and plugins
        id: caddy-version
        run: |
          CADDY_VERSION=$(curl -s https://api.github.com/repos/caddyserver/caddy/releases/latest | jq -r .tag_name | sed 's/v//')
          echo "version=$CADDY_VERSION" >> $GITHUB_OUTPUT
          
          # Start building xcaddy args
          XCADDY_ARGS=""
          
          # List of excluded providers
          declare -a EXCLUDED=(
            "cloudns" "dinahosting" "directadmin" "ddnss" "dnsexit" "dnsmadeeasy" "dnspod" "dnsimple" 
            "dreamhost" "dynv6" "easydns" "gandi" "gcore" "godaddy" "exoscale" "civo" "hosttech" 
            "hexonet" "katapult" "leaseweb" "huaweicloud" "googleclouddns" "metaname" "mythicbeasts" 
            "namedotcom" "namesilo" "namecheap" "netcup" "linode" "neoserv" "njalla" 
            "openstack-designate" "regery" "regfish" "powerdns" "netlify" "selectel" "vercel" 
            "transip" "westcn" "route53"
          )

          # Get all DNS plugins and check for go.mod
          for repo in $(curl -s 'https://api.github.com/orgs/caddy-dns/repos?per_page=100' | jq -r '.[] | select(.archived == false and .name != "template") | .name'); do
            # Skip if repo is in excluded list
            if [[ " ${EXCLUDED[@]} " =~ " ${repo} " ]]; then
              echo "⨯ Skipping excluded provider: $repo"
              continue
            fi
            
            echo "Checking $repo..."
            # Check if repo has go.mod in default branch
            if curl -s -f "https://raw.githubusercontent.com/caddy-dns/$repo/master/go.mod" > /dev/null || \
               curl -s -f "https://raw.githubusercontent.com/caddy-dns/$repo/main/go.mod" > /dev/null; then
              echo "✓ Found valid Go module: $repo"
              XCADDY_ARGS="$XCADDY_ARGS --with github.com/caddy-dns/$repo"
            else
              echo "✗ No go.mod found for $repo"
            fi
          done
          
          echo "xcaddy_args=$XCADDY_ARGS" >> $GITHUB_OUTPUT

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_GITHUB }}/${{ env.IMAGE_NAME }}
            ${{ secrets.DOCKERHUB_USERNAME }}/caddy-all
          tags: |
            type=raw,value=latest
            type=raw,value=${{ steps.caddy-version.outputs.version }}
            type=schedule,pattern=nightly
            type=raw,value=${{ steps.caddy-version.outputs.version }}-{{date 'YYYYMMDD'}}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
          labels: |
            org.opencontainers.image.title=Caddy with DNS plugins
            org.opencontainers.image.description=Caddy server with all DNS provider plugins built-in
            org.opencontainers.image.version=${{ steps.caddy-version.outputs.version }}
            org.opencontainers.image.licenses=Apache-2.0
            org.opencontainers.image.base.name=caddy:latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            XCADDY_ARGS=${{ steps.caddy-version.outputs.xcaddy_args }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
